@tailwind base;
@tailwind components;
@tailwind utilities;

@import url('https://fonts.googleapis.com/css2?family=DynaPuff&family=Gantari:wght@300&family=Poppins:wght@600&display=swap');

@layer components {

	.btn-main {
		@apply py-2 px-6 my-2 uppercase font-title font-semibold bg-primary text-white rounded-lg shadow-md hover:bg-primary-dark focus:outline-none focus:ring-2 focus:ring-primary-light focus:ring-opacity-75;
	}

	.btn-secondary {
		@apply py-2 px-6 my-2 bg-white font-title font-semibold uppercase text-primary border-primary rounded-lg shadow-md border-2 hover:border-primary-dark hover:bg-red-50 focus:outline-none focus:ring-2 focus:ring-primary-light focus:ring-opacity-75;
	}

	.input-okay {
		@apply shadow-sm font-paragraph border border-gray-300 text-matte text-base rounded-xl  focus:ring-primary focus:border-primary block w-full p-2;
	}

	.input-error {
		@apply bg-red-50 border font-paragraph border-red-500 text-red-700 font-medium placeholder-red-700 text-base rounded-xl focus:ring-red-500 focus:border-red-500 block w-full p-2 dark:bg-red-100 dark:border-red-400;
	}

	.error {
		@apply text-red-600 my-1 font-semibold font-paragraph text-sm;
	}

	label {
		@apply block my-2 text-base font-semibold font-title text-gray-700;
	}

	p {
		@apply mt-2 text-sm text-gray-400;
	}

		react-select-container {
				@apply font-paragraph capitalize;
		}

	.row {
		@apply flex flex-row flex-wrap gap-1 items-center;
	}

	.col {
		@apply flex flex-col flex-wrap;
	}

	Icon {
		@apply inline;
	}

	h1 {
		@apply text-4xl font-bold font-title;
	}

	h2 {
		@apply text-2xl font-bold font-title my-3;
	}

	a {
		@apply font-semibold hover:underline text-blue-800 hover:text-red-700;
	}

		.select input {
			@apply font-paragraph capitalize
		}

				.PhoneInput {
					@apply border border-gray-300 p-2 rounded-xl
				}

				.PhoneInput input {
					@apply focus:border-0 focus:ring-0 focus:outline-0 active:border-0 active:ring-0 active:outline-0 ring-0 appearance-none
				}

}

/* CSS variables. */
:root {
	--PhoneInput-color--focus: #03b2cb;
	--PhoneInputInternationalIconPhone-opacity: 0.8;
	--PhoneInputInternationalIconGlobe-opacity: 0.65;
	--PhoneInputCountrySelect-marginRight: 0.35em;
	--PhoneInputCountrySelectArrow-width: 0.3em;
	--PhoneInputCountrySelectArrow-marginLeft: var(--PhoneInputCountrySelect-marginRight);
	--PhoneInputCountrySelectArrow-borderWidth: 1px;
	--PhoneInputCountrySelectArrow-opacity: 0.45;
	--PhoneInputCountrySelectArrow-color: currentColor;
	--PhoneInputCountrySelectArrow-color--focus: var(--PhoneInput-color--focus);
	--PhoneInputCountrySelectArrow-transform: rotate(45deg);
	--PhoneInputCountryFlag-aspectRatio: 1.5;
	--PhoneInputCountryFlag-height: 1em;
	--PhoneInputCountryFlag-borderWidth: 1px;
	--PhoneInputCountryFlag-borderColor: rgba(41, 41, 41, 0.5);
	--PhoneInputCountryFlag-borderColor--focus: var(--PhoneInput-color--focus);
	--PhoneInputCountryFlag-backgroundColor--loading: rgba(0, 0, 0, 0.1);
}

.PhoneInput {
	/* This is done to stretch the contents of this component. */
	display: flex;
	gap: 2;
	align-items: center;
	font-family: 'Gantari';

}

.react-mapbox-ac-menu {
  width: auto;
  position: absolute;
  z-index: 9999;
  background-color: #fff;
  border: 1px solid #ccc;
  padding-top: 1rem;
  padding-bottom: 1rem;
  margin-top: -1.3rem;
}
 
.react-mapbox-ac-input {
  margin-bottom: 1.5rem;
}
 
.react-mapbox-ac-suggestion {
  font-size: 18px;
  margin-bottom: .5rem;
  cursor: pointer;
  padding-left: 1.5rem;
  padding-right: 1.5rem;
}
 
.react-mapbox-ac-suggestion:hover {
  background-color: #58a;
}


.PhoneInputInput {
	/* The phone number input stretches to fill all empty space */
	flex: 1;
	/* The phone number input should shrink
	   to make room for the extension input */
	min-width: 0;
}

.PhoneInputCountryIcon {
	width: calc(var(--PhoneInputCountryFlag-height) * var(--PhoneInputCountryFlag-aspectRatio));
	height: var(--PhoneInputCountryFlag-height);
}

.PhoneInputCountryIcon--square {
	width: var(--PhoneInputCountryFlag-height);
}

.PhoneInputCountryIcon--border {
	/* Removed `background-color` because when an `<img/>` was still loading
	   it would show a dark gray rectangle. */
	/* For some reason the `<img/>` is not stretched to 100% width and height
	   and sometime there can be seen white pixels of the background at top and bottom. */
	background-color: var(--PhoneInputCountryFlag-backgroundColor--loading);
	/* Border is added via `box-shadow` because `border` interferes with `width`/`height`. */
	/* For some reason the `<img/>` is not stretched to 100% width and height
	   and sometime there can be seen white pixels of the background at top and bottom,
	   so an additional "inset" border is added. */
	box-shadow: 0 0 0 var(--PhoneInputCountryFlag-borderWidth) var(--PhoneInputCountryFlag-borderColor),
		inset 0 0 0 var(--PhoneInputCountryFlag-borderWidth) var(--PhoneInputCountryFlag-borderColor);
}

.PhoneInputCountryIconImg {
	/* Fixes weird vertical space above the flag icon. */
	/* https://gitlab.com/catamphetamine/react-phone-number-input/-/issues/7#note_348586559 */
	display: block;
	/* 3rd party <SVG/> flag icons won't stretch if they have `width` and `height`.
	   Also, if an <SVG/> icon's aspect ratio was different, it wouldn't fit too. */
	width: 100%;
	height: 100%;
}

.PhoneInputInternationalIconPhone {
	opacity: var(--PhoneInputInternationalIconPhone-opacity);
}

.PhoneInputInternationalIconGlobe {
	opacity: var(--PhoneInputInternationalIconGlobe-opacity);
}

/* Styling native country `<select/>`. */

.PhoneInputCountry {
	position: relative;
	align-self: stretch;
	display: flex;
	align-items: center;
	margin-right: var(--PhoneInputCountrySelect-marginRight);
}

.PhoneInputCountrySelect {
	position: absolute;
	top: 0;
	left: 0;
	height: 100%;
	width: 100%;
	z-index: 1;
	border: 1;
	opacity: 1;
	cursor: pointer;
}

.PhoneInputCountrySelect[disabled],
.PhoneInputCountrySelect[readonly] {
	cursor: default;
}

.PhoneInputCountrySelectArrow {
	display: block;
	content: '';
	width: var(--PhoneInputCountrySelectArrow-width);
	height: var(--PhoneInputCountrySelectArrow-width);
	margin-left: var(--PhoneInputCountrySelectArrow-marginLeft);
	border-style: solid;
	border-color: var(--PhoneInputCountrySelectArrow-color);
	border-top-width: 0;
	border-bottom-width: var(--PhoneInputCountrySelectArrow-borderWidth);
	border-left-width: 0;
	border-right-width: var(--PhoneInputCountrySelectArrow-borderWidth);
	transform: var(--PhoneInputCountrySelectArrow-transform);
	opacity: var(--PhoneInputCountrySelectArrow-opacity);
}

.PhoneInputCountrySelect:focus+.PhoneInputCountryIcon+.PhoneInputCountrySelectArrow {
	opacity: 0;
	color: var(--PhoneInputCountrySelectArrow-color--focus);
}

.PhoneInputCountrySelect:focus+.PhoneInputCountryIcon--border {
	box-shadow: 0 0 0 var(--PhoneInputCountryFlag-borderWidth) var(--PhoneInputCountryFlag-borderColor--focus),
		inset 0 0 0 var(--PhoneInputCountryFlag-borderWidth) var(--PhoneInputCountryFlag-borderColor--focus);
}

.PhoneInputCountrySelect:focus+.PhoneInputCountryIcon .PhoneInputInternationalIconGlobe {
	opacity: 0;
	color: var(--PhoneInputCountrySelectArrow-color--focus);
}

main-loader {
	height:100vh;
	background-color:transparent;
}

.main-fader {
	width:100%;
	height:100vh;
	position:absolute;
	background-color:transparent;
}

.main-fader .loader {
	position:fixed;
	top:50%;
	left:50%;
	transform:translate(-50%, -50%);
}

.main-fader .loader svg {
	height:300px;
	display:block;
	margin:0 auto;
}

.main-fader .loader svg path {
	animation-duration:1s;
	animation-name:pulse;
	animation-iteration-count:infinite;
	color:#8D1D13;
}

.main-fader .loader svg path.path-7 {
	animation-delay:-1s;
}

.main-fader .loader svg path.path-6 {
	animation-delay:-0.875s;
}

.main-fader .loader svg path.path-5 {
	animation-delay:-0.75s;
}

.main-fader .loader svg path.path-4 {
	animation-delay:-0.625s;
}

.main-fader .loader svg path.path-3 {
	animation-delay:-0.5s;
}

.main-fader .loader svg path.path-2 {
	animation-delay:-0.375s;
}

.main-fader .loader svg path.path-1 {
	animation-delay:-0.25s;
}

.main-fader .loader svg path.path-0 {
	animation-delay:-0.125s;
}

@keyframes pulse {
	0% {
		opacity:0.1;
	}

	30% {
		opacity:0.8;
	}

	100% {
		opacity:0.1;
	}
}